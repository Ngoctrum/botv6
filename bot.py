import os
import subprocess
import sys
import requests
import json
import time

# Ki·ªÉm tra v√† c√†i ƒë·∫∑t th∆∞ vi·ªán requests n·∫øu ch∆∞a c√≥
try:
    import requests
except ImportError:
    subprocess.check_call([sys.executable, "-m", "pip", "install", "requests"])

# Token c·ªßa bot
botToken = "7547885601:AAHOXhN_t3Ac50rjAO9Ne054Iw89ITnu7VA"
apiUrl = f"https://api.telegram.org/bot{botToken}/"
lastUpdateId = 0
users = {}

# H√†m g·ª≠i tin nh·∫Øn
def sendMessage(chatId, message):
    url = f"{apiUrl}sendMessage?chat_id={chatId}&text={requests.utils.quote(message)}"
    requests.get(url)

# H√†m l·∫•y key ng·∫´u nhi√™n
def generateRandomKey():
    import random
    import string
    return 'EzGame' + ''.join(random.choices(string.ascii_letters + string.digits, k=10))

# H√†m r√∫t g·ªçn link v·ªõi API m·ªõi
def getShortenedKey(key):
    link_goc = requests.utils.quote(f"https://tngming.online/bot/?key={key}")
    api_token = '278b052cfc5ec76e3f918c9dae6c09b6c2bbd543fa1abfce8708fcfaa2f17e66'
    api_url = f"https://yeumoney.com/QL_api.php?token={api_token}&url={link_goc}&format=json"
    result = requests.get(api_url).json()

    if result["status"] == 'success':
        return result["shortenedUrl"]
    return False

# H√†m ki·ªÉm tra tr·∫°ng th√°i key c·ªßa ng∆∞·ªùi d√πng
def checkKeyStatus(userId):
    return users.get(userId, None)

# H√†m l∆∞u tr·∫°ng th√°i key c·ªßa ng∆∞·ªùi d√πng
def saveUserKeyStatus(userId, key, usedFor):
    if userId in users:
        users[userId]['usageCount'] += 1
    else:
        users[userId] = {'key': key, 'usedFor': usedFor, 'usageCount': 1}

# H√†m gi·ªõi h·∫°n s·ªë l·∫ßn d√πng key
def canUserGetKey(userId):
    return users.get(userId, {}).get('usageCount', 0) < 2

# H√†m l·∫•y 1 d√≤ng t·ª´ file v√† x√≥a d√≤ng ƒë√≥
def getAccountFromFile(filePath):
    with open(filePath, 'r') as file:
        lines = file.readlines()

    if lines:
        firstLine = lines[0].strip()
        with open(filePath, 'w') as file:
            file.writelines(lines[1:])
        return firstLine
    return False

# H√†m l·∫•y to√†n b·ªô n·ªôi dung t·ª´ file
def getFileContent(filePath):
    if os.path.exists(filePath):
        with open(filePath, 'r') as file:
            return file.read()
    return False

# V√≤ng l·∫∑p ch√≠nh ƒë·ªÉ l·∫•y tin nh·∫Øn t·ª´ bot
def main():
    global lastUpdateId
    while True:
        response = requests.get(f"{apiUrl}getUpdates?offset={lastUpdateId}").json()

        if response["result"]:
            for update in response["result"]:
                if "message" in update:
                    chatId = update["message"]["chat"]["id"]
                    message = update["message"]["text"]
                    userId = update["message"]["from"]["id"]
                    username = update["message"]["from"].get("username", "Ng∆∞·ªùi d√πng")
                    lastUpdateId = update["update_id"] + 1

                    if message == "/start":
                        welcomeMessage = f"Xin ch√†o {username}! Nh·∫≠p /help ƒë·ªÉ xem c√°c l·ªánh c·ªßa bot."
                        sendMessage(chatId, welcomeMessage)

                    elif message == "/help":
                        helpMessage = """Danh s√°ch l·ªánh:
                        /getkey - L·∫•y key v∆∞·ª£t link
                        /key [m√£] - X√°c nh·∫≠n key
                        /redfinger - L·∫•y acc Redfinger
                        /ugphone - L·∫•y acc UGPhone"""
                        sendMessage(chatId, helpMessage)

                    elif message == "/getkey":
                        if not canUserGetKey(userId):
                            sendMessage(chatId, "B·∫°n ƒë√£ y√™u c·∫ßu qu√° 2 l·∫ßn h√¥m nay. Vui l√≤ng quay l·∫°i v√†o ng√†y mai.")
                            continue

                        randomKey = generateRandomKey()
                        shortLink = getShortenedKey(randomKey)

                        if shortLink:
                            saveUserKeyStatus(userId, randomKey, 'pending')
                            sendMessage(chatId, f"Vui l√≤ng v∆∞·ª£t qua link n√†y: {shortLink}")
                        else:
                            sendMessage(chatId, "ƒê√£ c√≥ l·ªói x·∫£y ra khi t·∫°o link. Vui l√≤ng th·ª≠ l·∫°i sau.")

                    elif message.startswith("/key"):
                        userKey = message.replace("/key", "").strip()
                        status = checkKeyStatus(userId)

                        if status and status['key'] == userKey and status['usedFor'] == 'pending':
                            sendMessage(chatId, "üîÑ ƒêang x·ª≠ l√Ω...")
                            users[userId]['usedFor'] = 'success'
                            sendMessage(chatId, "‚úÖ X√°c nh·∫≠n key th√†nh c√¥ng! B·∫°n c√≥ th·ªÉ d√πng l·ªánh /redfinger ho·∫∑c /ugphone.")
                        else:
                            sendMessage(chatId, "M√£ key kh√¥ng h·ª£p l·ªá ho·∫∑c ƒë√£ ƒë∆∞·ª£c s·ª≠ d·ª•ng.")

                    elif message == "/redfinger":
                        status = checkKeyStatus(userId)
                        if status and status['usedFor'] == 'success':
                            account = getAccountFromFile('redfinger.txt')
                            if account:
                                sendMessage(chatId, f"T√†i kho·∫£n Redfinger c·ªßa b·∫°n l√†: {account}")
                                del users[userId]
                            else:
                                sendMessage(chatId, "Kh√¥ng c√≤n t√†i kho·∫£n Redfinger.")
                        else:
                            sendMessage(chatId, "B·∫°n c·∫ßn x√°c nh·∫≠n key tr∆∞·ªõc khi s·ª≠ d·ª•ng l·ªánh n√†y.")

                    elif message == "/ugphone":
                        status = checkKeyStatus(userId)
                        if status and status['usedFor'] == 'success':
                            account = getAccountFromFile('ugphone.txt')
                            if account:
                                sendMessage(chatId, f"T√†i kho·∫£n UGPhone c·ªßa b·∫°n l√†: {account}")
                                del users[userId]
                            else:
                                sendMessage(chatId, "Kh√¥ng c√≤n t√†i kho·∫£n UGPhone.")
                        else:
                            sendMessage(chatId, "B·∫°n c·∫ßn x√°c nh·∫≠n key tr∆∞·ªõc khi s·ª≠ d·ª•ng l·ªánh n√†y.")

        time.sleep(1)

if __name__ == "__main__":
    main()